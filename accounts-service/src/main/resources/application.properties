spring.application.name=Accounts-service

# ===============================
# DATABASE CONFIGURATION (H2)
# ===============================
spring.datasource.url=jdbc:h2:mem:librarydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# ===============================
# JPA / HIBERNATE CONFIGURATION
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# ===============================
# H2 CONSOLE SETTINGS
# ===============================
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ===============================
# SERVER SETTINGS
# ===============================
server.port=8080

# ===============================
# LOGGING
# ===============================
logging.level.root=info

# ===============================
# Kafka Configuration
# ===============================
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=accounts-service-group
spring.kafka.consumer.auto-offset-reset=earliest

# JsonDeserializer Configuration (Fixed)
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=java.util.HashMap

# ===============================
# Kafka Topics
# ===============================
spring.cloud.stream.bindings.userCreated-out-0.destination=user.created
spring.cloud.stream.bindings.membershipCancelled-out-0.destination=user.membership.cancelled

# ===============================
# Kafka Streams Real-Time Analytics
# ===============================
spring.cloud.stream.function.definition=processOrders


# Function definition (matches your @Bean name)
spring.cloud.function.definition=analyzeUserOrders

# Kafka binder configuration
spring.cloud.stream.bindings.analyzeUserOrders-in-0.destination=orders
spring.cloud.stream.bindings.analyzeUserOrders-in-0.group=accounts-service-group


# Input: orderPlaced events (from order service)
spring.cloud.stream.bindings.processOrders-in-0.destination=orders
spring.cloud.stream.bindings.processOrders-in-0.content-type=application/json
spring.cloud.stream.bindings.processOrders-in-0.group=order-analytics-group

spring.cloud.stream.bindings.orderPlacedListener-in-0.destination=orders
spring.cloud.stream.bindings.orderPlacedListener-in-0.group=accounts-service


# Output: Aggregated summary events
spring.cloud.stream.bindings.processOrders-out-0.destination=userOrderSummary
spring.cloud.stream.bindings.processOrders-out-0.content-type=application/json

# Kafka broker connection
spring.cloud.stream.kafka.binder.brokers=localhost:9092

# Windowing config (used by Kafka Streams)
windowstore.name=user-order-counts
window.size.ms=300000
